{
  "paragraphs": [
    {
      "text": "val account \u003d spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/home/igor/Downloads/bankdata/data/account.csv\")\nval card \u003d spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/home/igor/Downloads/bankdata/data/card.csv\")\nval client \u003d spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/home/igor/Downloads/bankdata/data/client.csv\")\nval disp \u003d spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/home/igor/Downloads/bankdata/data/disp.csv\")\nval district \u003d spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/home/igor/Downloads/bankdata/data/district.csv\")\nval loan \u003d spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/home/igor/Downloads/bankdata/data/loan.csv\")\nval order \u003d spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/home/igor/Downloads/bankdata/data/order.csv\")\nval trans \u003d spark.read.format(\"csv\").option(\"header\", \"true\").load(\"/home/igor/Downloads/bankdata/data/trans.csv\")\n// acc.show()\n\n// acc.select($\"account_id\").show()",
      "user": "anonymous",
      "dateUpdated": "May 27, 2018 1:30:49 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "account: org.apache.spark.sql.DataFrame \u003d [account_id: string, district_id: string ... 2 more fields]\ncard: org.apache.spark.sql.DataFrame \u003d [card_id: string, disp_id: string ... 2 more fields]\nclient: org.apache.spark.sql.DataFrame \u003d [client_id: string, birth_number: string ... 1 more field]\ndisp: org.apache.spark.sql.DataFrame \u003d [disp_id: string, client_id: string ... 2 more fields]\ndistrict: org.apache.spark.sql.DataFrame \u003d [a1: string, a2: string ... 14 more fields]\nloan: org.apache.spark.sql.DataFrame \u003d [loan_id: string, account_id: string ... 5 more fields]\norder: org.apache.spark.sql.DataFrame \u003d [order_id: string, account_id: string ... 4 more fields]\ntrans: org.apache.spark.sql.DataFrame \u003d [trans_id: string, account_id: string ... 8 more fields]\n+----------+\n|account_id|\n+----------+\n|       576|\n|      3818|\n|       704|\n|      2378|\n|      2632|\n|      1972|\n|      1539|\n|       793|\n|      2484|\n|      1695|\n|      1726|\n|      2881|\n|      2357|\n|      2177|\n|       485|\n|       652|\n|      9635|\n|      1844|\n|      1926|\n|      2393|\n+----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1527414812318_-311469296",
      "id": "20180527-125332_52541398",
      "dateCreated": "May 27, 2018 12:53:32 PM",
      "dateStarted": "May 27, 2018 1:23:03 PM",
      "dateFinished": "May 27, 2018 1:23:08 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val d_card \u003d card.select($\"card_id\", $\"type\", $\"issued\")\nd_card.show()\ncard.show()",
      "user": "anonymous",
      "dateUpdated": "May 27, 2018 1:32:05 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "d_card: org.apache.spark.sql.DataFrame \u003d [card_id: string, type: string ... 1 more field]\n+-------+-------+---------------+\n|card_id|   type|         issued|\n+-------+-------+---------------+\n|   1005|classic|931107 00:00:00|\n|    104|classic|940119 00:00:00|\n|    747|classic|940205 00:00:00|\n|     70|classic|940208 00:00:00|\n|    577|classic|940215 00:00:00|\n|    377|classic|940303 00:00:00|\n|    721| junior|940405 00:00:00|\n|    437|classic|940601 00:00:00|\n|    188|classic|940619 00:00:00|\n|     13|classic|940629 00:00:00|\n|    732|classic|940721 00:00:00|\n|    181|classic|940819 00:00:00|\n|    384| junior|940915 00:00:00|\n|    309|classic|940919 00:00:00|\n|    478|classic|941009 00:00:00|\n|    563|classic|941021 00:00:00|\n|    369|classic|941108 00:00:00|\n|    376|classic|941110 00:00:00|\n|    483|classic|941124 00:00:00|\n|    174| junior|941204 00:00:00|\n+-------+-------+---------------+\nonly showing top 20 rows\n\n+-------+-------+-------+---------------+\n|card_id|disp_id|   type|         issued|\n+-------+-------+-------+---------------+\n|   1005|   9285|classic|931107 00:00:00|\n|    104|    588|classic|940119 00:00:00|\n|    747|   4915|classic|940205 00:00:00|\n|     70|    439|classic|940208 00:00:00|\n|    577|   3687|classic|940215 00:00:00|\n|    377|   2429|classic|940303 00:00:00|\n|    721|   4680| junior|940405 00:00:00|\n|    437|   2762|classic|940601 00:00:00|\n|    188|   1146|classic|940619 00:00:00|\n|     13|     87|classic|940629 00:00:00|\n|    732|   4763|classic|940721 00:00:00|\n|    181|   1066|classic|940819 00:00:00|\n|    384|   2475| junior|940915 00:00:00|\n|    309|   1946|classic|940919 00:00:00|\n|    478|   3084|classic|941009 00:00:00|\n|    563|   3589|classic|941021 00:00:00|\n|    369|   2363|classic|941108 00:00:00|\n|    376|   2428|classic|941110 00:00:00|\n|    483|   3115|classic|941124 00:00:00|\n|    174|   1039| junior|941204 00:00:00|\n+-------+-------+-------+---------------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1527415273552_-1954655227",
      "id": "20180527-130113_922504440",
      "dateCreated": "May 27, 2018 1:01:13 PM",
      "dateStarted": "May 27, 2018 1:32:05 PM",
      "dateFinished": "May 27, 2018 1:32:06 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val d_client \u003d client.select($\"client_id\", $\"birth_number\", ($\"district_id\").alias(\"district_code\"))\nd_client.show()\nclient.show()",
      "user": "anonymous",
      "dateUpdated": "May 27, 2018 1:40:41 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "d_client: org.apache.spark.sql.DataFrame \u003d [client_id: string, birth_number: string ... 1 more field]\n+---------+------------+-------------+\n|client_id|birth_number|district_code|\n+---------+------------+-------------+\n|        1|      706213|           18|\n|        2|      450204|            1|\n|        3|      406009|            1|\n|        4|      561201|            5|\n|        5|      605703|            5|\n|        6|      190922|           12|\n|        7|      290125|           15|\n|        8|      385221|           51|\n|        9|      351016|           60|\n|       10|      430501|           57|\n|       11|      505822|           57|\n|       12|      810220|           40|\n|       13|      745529|           54|\n|       14|      425622|           76|\n|       15|      185828|           21|\n|       16|      190225|           21|\n|       17|      341013|           76|\n|       18|      315405|           76|\n|       19|      421228|           47|\n|       20|      790104|           46|\n+---------+------------+-------------+\nonly showing top 20 rows\n\n+---------+------------+-----------+\n|client_id|birth_number|district_id|\n+---------+------------+-----------+\n|        1|      706213|         18|\n|        2|      450204|          1|\n|        3|      406009|          1|\n|        4|      561201|          5|\n|        5|      605703|          5|\n|        6|      190922|         12|\n|        7|      290125|         15|\n|        8|      385221|         51|\n|        9|      351016|         60|\n|       10|      430501|         57|\n|       11|      505822|         57|\n|       12|      810220|         40|\n|       13|      745529|         54|\n|       14|      425622|         76|\n|       15|      185828|         21|\n|       16|      190225|         21|\n|       17|      341013|         76|\n|       18|      315405|         76|\n|       19|      421228|         47|\n|       20|      790104|         46|\n+---------+------------+-----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1527417125216_-1231091975",
      "id": "20180527-133205_52537646",
      "dateCreated": "May 27, 2018 1:32:05 PM",
      "dateStarted": "May 27, 2018 1:40:41 PM",
      "dateFinished": "May 27, 2018 1:40:42 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val d_account \u003d account.select($\"account_id\", ($\"district_id\").alias(\"district_code\"), $\"frequency\", $\"date\")\nd_account.show()\naccount.show()",
      "user": "anonymous",
      "dateUpdated": "May 27, 2018 1:43:14 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "d_account: org.apache.spark.sql.DataFrame \u003d [account_id: string, district_code: string ... 2 more fields]\n+----------+-------------+------------------+------+\n|account_id|district_code|         frequency|  date|\n+----------+-------------+------------------+------+\n|       576|           55|  POPLATEK MESICNE|930101|\n|      3818|           74|  POPLATEK MESICNE|930101|\n|       704|           55|  POPLATEK MESICNE|930101|\n|      2378|           16|  POPLATEK MESICNE|930101|\n|      2632|           24|  POPLATEK MESICNE|930102|\n|      1972|           77|  POPLATEK MESICNE|930102|\n|      1539|            1|POPLATEK PO OBRATU|930103|\n|       793|           47|  POPLATEK MESICNE|930103|\n|      2484|           74|  POPLATEK MESICNE|930103|\n|      1695|           76|  POPLATEK MESICNE|930103|\n|      1726|           48|  POPLATEK MESICNE|930103|\n|      2881|           70|  POPLATEK MESICNE|930104|\n|      2357|           19|  POPLATEK MESICNE|930104|\n|      2177|           62|  POPLATEK MESICNE|930104|\n|       485|            6|POPLATEK PO OBRATU|930104|\n|       652|           21|  POPLATEK MESICNE|930105|\n|      9635|           70|  POPLATEK MESICNE|930105|\n|      1844|           44|  POPLATEK MESICNE|930106|\n|      1926|           37|  POPLATEK MESICNE|930106|\n|      2393|           10|  POPLATEK MESICNE|930107|\n+----------+-------------+------------------+------+\nonly showing top 20 rows\n\n+----------+-----------+------------------+------+\n|account_id|district_id|         frequency|  date|\n+----------+-----------+------------------+------+\n|       576|         55|  POPLATEK MESICNE|930101|\n|      3818|         74|  POPLATEK MESICNE|930101|\n|       704|         55|  POPLATEK MESICNE|930101|\n|      2378|         16|  POPLATEK MESICNE|930101|\n|      2632|         24|  POPLATEK MESICNE|930102|\n|      1972|         77|  POPLATEK MESICNE|930102|\n|      1539|          1|POPLATEK PO OBRATU|930103|\n|       793|         47|  POPLATEK MESICNE|930103|\n|      2484|         74|  POPLATEK MESICNE|930103|\n|      1695|         76|  POPLATEK MESICNE|930103|\n|      1726|         48|  POPLATEK MESICNE|930103|\n|      2881|         70|  POPLATEK MESICNE|930104|\n|      2357|         19|  POPLATEK MESICNE|930104|\n|      2177|         62|  POPLATEK MESICNE|930104|\n|       485|          6|POPLATEK PO OBRATU|930104|\n|       652|         21|  POPLATEK MESICNE|930105|\n|      9635|         70|  POPLATEK MESICNE|930105|\n|      1844|         44|  POPLATEK MESICNE|930106|\n|      1926|         37|  POPLATEK MESICNE|930106|\n|      2393|         10|  POPLATEK MESICNE|930107|\n+----------+-----------+------------------+------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1527417580304_2033175701",
      "id": "20180527-133940_2093941386",
      "dateCreated": "May 27, 2018 1:39:40 PM",
      "dateStarted": "May 27, 2018 1:43:14 PM",
      "dateFinished": "May 27, 2018 1:43:15 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val f_trans \u003d ((trans.join(d_client.select($\"client_id\")).join(d_card.select($\"card_id\"))).as(\"d1\").join(disp.as(\"d2\"), $\"d1.account_id\" \u003d\u003d\u003d $\"d2.account_id\", \"inner\")).as(\"d3\").join(card.as(\"d4\"), $\"d3.disp_id\" \u003d\u003d\u003d $\"d4.disp_id\", \"leftouter\")\nf_trans.show()",
      "user": "anonymous",
      "dateUpdated": "May 27, 2018 2:07:11 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "f_trans: org.apache.spark.sql.DataFrame \u003d [trans_id: string, account_id: string ... 18 more fields]\norg.apache.spark.sql.AnalysisException: Detected cartesian product for INNER join between logical plans\nJoin Inner\n:- Join Cross, (account_id#158 \u003d account_id#89)\n:  :- Filter isnotnull(account_id#158)\n:  :  +- Relation[trans_id#157,account_id#158,date#159,type#160,operation#161,amount#162,balance#163,k_symbol#164,bank#165,account#166] csv\n:  +- Filter isnotnull(account_id#89)\n:     +- Relation[disp_id#87,client_id#88,account_id#89,type#90] csv\n+- Project [client_id#80]\n   +- Relation[client_id#80,birth_number#81,district_id#82] csv\nand\nProject [card_id#71]\n+- Relation[card_id#71,disp_id#72,type#73,issued#74] csv\nJoin condition is missing or trivial.\nUse the CROSS JOIN syntax to allow cartesian products between these relations.;\n  at org.apache.spark.sql.catalyst.optimizer.CheckCartesianProducts$$anonfun$apply$19.applyOrElse(Optimizer.scala:1011)\n  at org.apache.spark.sql.catalyst.optimizer.CheckCartesianProducts$$anonfun$apply$19.applyOrElse(Optimizer.scala:1008)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:288)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$3.apply(TreeNode.scala:288)\n  at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:287)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:331)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:188)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:329)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:331)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:188)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:329)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:331)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:188)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:329)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$transformDown$1.apply(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$5.apply(TreeNode.scala:331)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:188)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformChildren(TreeNode.scala:329)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:293)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.transform(TreeNode.scala:277)\n  at org.apache.spark.sql.catalyst.optimizer.CheckCartesianProducts.apply(Optimizer.scala:1008)\n  at org.apache.spark.sql.catalyst.optimizer.CheckCartesianProducts.apply(Optimizer.scala:993)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:85)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:82)\n  at scala.collection.IndexedSeqOptimized$class.foldl(IndexedSeqOptimized.scala:57)\n  at scala.collection.IndexedSeqOptimized$class.foldLeft(IndexedSeqOptimized.scala:66)\n  at scala.collection.mutable.WrappedArray.foldLeft(WrappedArray.scala:35)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:82)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:74)\n  at scala.collection.immutable.List.foreach(List.scala:381)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:74)\n  at org.apache.spark.sql.execution.QueryExecution.optimizedPlan$lzycompute(QueryExecution.scala:73)\n  at org.apache.spark.sql.execution.QueryExecution.optimizedPlan(QueryExecution.scala:73)\n  at org.apache.spark.sql.execution.QueryExecution.sparkPlan$lzycompute(QueryExecution.scala:79)\n  at org.apache.spark.sql.execution.QueryExecution.sparkPlan(QueryExecution.scala:75)\n  at org.apache.spark.sql.execution.QueryExecution.executedPlan$lzycompute(QueryExecution.scala:84)\n  at org.apache.spark.sql.execution.QueryExecution.executedPlan(QueryExecution.scala:84)\n  at org.apache.spark.sql.Dataset.withTypedCallback(Dataset.scala:2791)\n  at org.apache.spark.sql.Dataset.head(Dataset.scala:2112)\n  at org.apache.spark.sql.Dataset.take(Dataset.scala:2327)\n  at org.apache.spark.sql.Dataset.showString(Dataset.scala:248)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:636)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:595)\n  at org.apache.spark.sql.Dataset.show(Dataset.scala:604)\n  ... 47 elided\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1527417752977_653307446",
      "id": "20180527-134232_495636552",
      "dateCreated": "May 27, 2018 1:42:32 PM",
      "dateStarted": "May 27, 2018 2:06:50 PM",
      "dateFinished": "May 27, 2018 2:06:52 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val f_trans \u003d trans.as(\"trans\")\n                    .join(disp.as(\"disp\"), $\"trans.account_id\" \u003d\u003d\u003d $\"disp.account_id\", \"inner\")\n                    .join(card.as(\"card\"), $\"disp.disp_id\" \u003d\u003d\u003d $\"card.disp_id\", \"leftouter\")\n                    .select($\"trans.*\", $\"disp.client_id\", $\"card.card_id\")\nf_trans.show()",
      "user": "anonymous",
      "dateUpdated": "May 27, 2018 2:46:15 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala"
        },
        "editorMode": "ace/mode/scala",
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "f_trans: org.apache.spark.sql.DataFrame \u003d [trans_id: string, account_id: string ... 10 more fields]\n+--------+----------+------+------+---------+-------+-------+--------+----+-------+---------+-------+\n|trans_id|account_id|  date|  type|operation| amount|balance|k_symbol|bank|account|client_id|card_id|\n+--------+----------+------+------+---------+-------+-------+--------+----+-------+---------+-------+\n|  695247|      2378|930101|PRIJEM|    VKLAD| 700.00| 700.00|    null|null|   null|     2873|   null|\n|  171812|       576|930101|PRIJEM|    VKLAD| 900.00| 900.00|    null|null|   null|      693|   null|\n|  171812|       576|930101|PRIJEM|    VKLAD| 900.00| 900.00|    null|null|   null|      692|   null|\n|  207264|       704|930101|PRIJEM|    VKLAD|1000.00|1000.00|    null|null|   null|      845|   null|\n|  207264|       704|930101|PRIJEM|    VKLAD|1000.00|1000.00|    null|null|   null|      844|   null|\n| 1117247|      3818|930101|PRIJEM|    VKLAD| 600.00| 600.00|    null|null|   null|     4602|   null|\n| 1117247|      3818|930101|PRIJEM|    VKLAD| 600.00| 600.00|    null|null|   null|     4601|   null|\n|  579373|      1972|930102|PRIJEM|    VKLAD| 400.00| 400.00|    null|null|   null|     2397|   null|\n|  771035|      2632|930102|PRIJEM|    VKLAD|1100.00|1100.00|    null|null|   null|     3177|   null|\n|  452728|      1539|930103|PRIJEM|    VKLAD| 600.00| 600.00|    null|null|   null|     1866|   null|\n|  725751|      2484|930103|PRIJEM|    VKLAD|1100.00|1100.00|    null|null|   null|     2999|   null|\n|  497211|      1695|930103|PRIJEM|    VKLAD| 200.00| 200.00|    null|null|   null|     2058|    321|\n|  232960|       793|930103|PRIJEM|    VKLAD| 800.00| 800.00|    null|null|   null|      951|   null|\n|  232960|       793|930103|PRIJEM|    VKLAD| 800.00| 800.00|    null|null|   null|      950|   null|\n|  505240|      1726|930103|PRIJEM|    VKLAD|1000.00|1000.00|    null|null|   null|     2094|   null|\n|  505240|      1726|930103|PRIJEM|    VKLAD|1000.00|1000.00|    null|null|   null|     2093|   null|\n|  144541|       485|930104|PRIJEM|    VKLAD| 300.00| 300.00|    null|null|   null|      583|   null|\n|  637741|      2177|930104|PRIJEM|    VKLAD| 800.00| 800.00|    null|null|   null|     2636|   null|\n|  689827|      2357|930104|PRIJEM|    VKLAD| 800.00| 800.00|    null|null|   null|     2849|   null|\n|  846006|      2881|930104|PRIJEM|    VKLAD| 700.00| 700.00|    null|null|   null|     3483|   null|\n+--------+----------+------+------+---------+-------+-------+--------+----+-------+---------+-------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1527419235059_-183587118",
      "id": "20180527-140715_36968574",
      "dateCreated": "May 27, 2018 2:07:15 PM",
      "dateStarted": "May 27, 2018 2:46:15 PM",
      "dateFinished": "May 27, 2018 2:46:17 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1527421407241_978617239",
      "id": "20180527-144327_1397037146",
      "dateCreated": "May 27, 2018 2:43:27 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "StarSchema",
  "id": "2DFM2QPXM",
  "angularObjects": {
    "2DFVRAQUU:shared_process": []
  },
  "config": {},
  "info": {}
}